#!/usr/bin/env bash
set -euo pipefail

# Claude hooks 설정 업데이트 스크립트 - 통합 버전
# 모드를 선택하여 적절한 설정을 적용합니다

# 색상 정의
GREEN='\033[0;32m'
BLUE='\033[0;34m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
NC='\033[0m'

# Claude 설정 파일 위치
CLAUDE_CONFIG="${HOME}/.claude/settings.json"
HOOKS_DIR="${HOME}/.claude/hooks"
CONFIG_FILE="${HOOKS_DIR}/config.sh"

echo -e "${BLUE}╔════════════════════════════════════════╗${NC}"
echo -e "${BLUE}║  Claude Hooks 설정 업데이트            ║${NC}"
echo -e "${BLUE}╚════════════════════════════════════════╝${NC}"
echo

# 설정 파일 확인
if [[ ! -f "$CLAUDE_CONFIG" ]]; then
    echo -e "${RED}Error: Claude 설정 파일을 찾을 수 없습니다.${NC}"
    echo "위치: $CLAUDE_CONFIG"
    echo
    echo "Claude Code가 최소 한 번 실행되었는지 확인해주세요."
    exit 1
fi

# jq 설치 확인
if ! command -v jq &> /dev/null; then
    echo -e "${RED}Error: jq가 설치되어 있지 않습니다.${NC}"
    echo "다음 명령으로 설치해주세요:"
    echo "  - macOS: brew install jq"
    echo "  - Ubuntu/Debian: sudo apt install jq"
    exit 1
fi

# 현재 설정 확인
if [[ -f "$CONFIG_FILE" ]]; then
    source "$CONFIG_FILE"
    echo -e "${BLUE}현재 모드: ${CLAUDE_CONTEXT_MODE:-unknown}${NC}"
    echo
fi

# 모드 선택
echo "설정할 모드를 선택하세요:"
echo
echo "1) Basic   - CLAUDE.md 주입만"
echo "2) History - 대화 기록 관리 (Gemini 불필요)"
echo "3) Advanced - 토큰 모니터링 포함 (Gemini 필요)"
echo
read -p "선택 [1-3]: " choice

case $choice in
    1) MODE="basic" ;;
    2) MODE="history" ;;
    3) MODE="advanced" ;;
    *)
        echo -e "${RED}잘못된 선택입니다.${NC}"
        exit 1
        ;;
esac

# 백업 생성
BACKUP_FILE="${CLAUDE_CONFIG}.backup.$(date +%Y%m%d_%H%M%S)"
cp "$CLAUDE_CONFIG" "$BACKUP_FILE"
echo -e "${GREEN}✓ 설정 백업 완료: $BACKUP_FILE${NC}"

# hooks 설정
NEW_HOOKS=$(cat <<EOF
{
  "hooks": {
    "PreToolUse": "${HOOKS_DIR}/src/core/injector.sh",
    "PreCompact": "${HOOKS_DIR}/src/core/precompact.sh"
  }
}
EOF
)

# 설정 업데이트
echo "Claude 설정을 업데이트하는 중..."
UPDATED_CONFIG=$(jq '. * '"$NEW_HOOKS" "$CLAUDE_CONFIG")
echo "$UPDATED_CONFIG" > "$CLAUDE_CONFIG"

# config.sh 업데이트
if [[ -f "${HOOKS_DIR}/config.sh.template" ]]; then
    sed "s/{{MODE}}/$MODE/g" "${HOOKS_DIR}/config.sh.template" > "$CONFIG_FILE"
else
    cat > "$CONFIG_FILE" << EOF
#!/usr/bin/env bash
# Claude Context Configuration

CLAUDE_CONTEXT_MODE="$MODE"
export CLAUDE_CONTEXT_MODE
EOF
fi

# 결과 확인
if jq -e '.hooks' "$CLAUDE_CONFIG" > /dev/null; then
    echo -e "${GREEN}✓ Hooks 설정이 성공적으로 업데이트되었습니다!${NC}"
    echo
    echo "설정된 hooks:"
    jq '.hooks' "$CLAUDE_CONFIG"
else
    echo -e "${RED}Error: 설정 업데이트에 실패했습니다.${NC}"
    echo "백업 파일: $BACKUP_FILE"
    exit 1
fi

echo
echo -e "${BLUE}선택한 모드: $MODE${NC}"
echo

case $MODE in
    basic)
        echo "기본 기능만 활성화되었습니다."
        echo "- CLAUDE.md 파일 자동 주입"
        echo "- 대화 압축 시 컨텍스트 보호"
        ;;
    history)
        echo "대화 기록 관리가 활성화되었습니다."
        echo "- 모든 대화 자동 추적"
        echo "- 간단한 내장 요약 기능"
        echo
        echo "사용법:"
        echo "  ${HOOKS_DIR}/src/monitor/claude_history_manager.sh --help"
        ;;
    advanced)
        echo "고급 기능이 활성화되었습니다."
        echo "- 대화 기록 관리"
        echo "- 토큰 모니터링 (Gemini 필요)"
        echo
        echo "Gemini가 설치되어 있는지 확인하세요:"
        echo "  command -v gemini"
        ;;
esac

echo
echo -e "${GREEN}설정이 완료되었습니다! Claude Code를 재시작해주세요.${NC}"